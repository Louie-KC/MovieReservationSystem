name: Node.js Integration CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/routes/*.js'
      - 'src/controllers/*.js'
      - 'src/services/*.js'
      - 'test/integration/*.test.js'
      - 'schema-up.sql'
      - '.github/workflows/integration.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/routes/*.js'
      - 'src/controllers/*.js'
      - 'src/services/*.js'
      - 'test/integration/*.test.js'
      - 'schema-up.sql'
      - '.github/workflows/integration.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -ppassword"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5
    
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Run MySQL migration
      run: |
        sudo apt update
        sudo apt install -y mysql-client
        mysql -h 127.0.0.1 -u root -ppassword < schema-up.sql

    - name: Create test .env file
      run: |
        echo "SERVER_PORT=8080" >> .env
        echo "LOG_LEVEL=INFO" >> .env
        echo "MYSQL_DB_ADDR=\"127.0.0.1\"" >> .env
        echo "MYSQL_DB_NAME=\"MovieReservation\"" >> .env
        echo "MYSQL_DB_PORT=3306" >> .env
        echo "MYSQL_DB_USER=root" >> .env
        echo "MYSQL_DB_PASS=password" >> .env
        echo "JWT_SECRET=\"WorkflowTestSecret\"" >> .env
        echo "JWT_EXPIRE_TIME=\"5m\"" >> .env
        echo "PASSWORD_SALT_ROUNDS=5" >> .env
    
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run test:integration
      